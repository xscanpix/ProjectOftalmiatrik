package org.anaxivis;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.KeyboardFocusManager;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JFileChooser;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.filechooser.FileNameExtensionFilter;

import org.anaxivis.core.svg.EyeChartGenerator;
import org.anaxivis.core.svg.JSVGCanvasLoader;

/**
 * The main frame menu bar class
 * 
 * @author Svante Nilsson
 * @version 0.1
 * @since 2015-04-06
 */
@SuppressWarnings("serial")
public class MainFrameMenu extends JMenuBar {
    private static final Logger logger = Logger.getLogger(MainFrameMenu.class.getName());

    // String constants
    private static final String FILE = "Arkiv";
    private static final String FULLSCREEN = "Fullskärm";
    private static final String OPEN_FILE = "Öppna fil";
    private static final String EXIT = "Stäng";
    private static final String CHARTS = "Charts";
    private static final String LOGMAR_RANDOM = "Random LogMAR";
    private static final String HELP = "Hjälp";
    private static final String ABOUT = "Om programmet";

    private Axanivis parent;

    public MainFrameMenu(Axanivis parent) {
	super();

	this.parent = parent;

	init();
    }

    private void init() {
	add(createFileMenu());
	add(createChartMenu());
	add(createHelpMenu());
    }

    private JMenu createFileMenu() {
	JMenu fileMenu = new JMenu(FILE);
	JMenuItem exitMenuItem = new JMenuItem(EXIT);
	exitMenuItem.addActionListener(new ActionListener() {
	    @Override
	    public void actionPerformed(ActionEvent e) {
		parent.requestClose();
	    }
	});
	JMenuItem fullscreenMenuItem = new JMenuItem(FULLSCREEN);
	fullscreenMenuItem.addActionListener(new ActionListener() {
	    @Override
	    public void actionPerformed(ActionEvent e) {
		parent.requestToggleFullscreen();
	    }
	});

	JMenuItem openFileMenuItem = new JMenuItem(OPEN_FILE);
	openFileMenuItem.addActionListener(new ActionListener() {
	    @Override
	    public void actionPerformed(ActionEvent e) {
		JFileChooser chooser = new JFileChooser();
		FileNameExtensionFilter filter = new FileNameExtensionFilter("SVG Files", "svg");
		chooser.setFileFilter(filter);
		int returnVal = chooser.showOpenDialog(null);
		if (returnVal == JFileChooser.APPROVE_OPTION) {
		    logger.log(Level.INFO, "User selected file: " + chooser.getSelectedFile().getName());
		    parent.getMainContent().setCurrentSvgFile(chooser.getSelectedFile());
		} else {
		    logger.log(Level.INFO, "User canceled selecting a file");
		}
	    }
	});

	fileMenu.add(openFileMenuItem);
	fileMenu.add(fullscreenMenuItem);
	fileMenu.add(exitMenuItem);

	return fileMenu;
    }

    private JMenu createChartMenu() {
	JMenu chartMenu = new JMenu(CHARTS);
	JMenuItem logMARRandomMenuItem = new JMenuItem(LOGMAR_RANDOM);
	logMARRandomMenuItem.addActionListener(new ActionListener() {
	    @Override
	    public void actionPerformed(ActionEvent e) {
		parent.getMainContent().setCurrentJSVGCanvas(
			JSVGCanvasLoader.loadString(EyeChartGenerator.generateEyeChart(EyeChartGenerator.TYPE.LOGMAR, "ABCDEFGKLJAS", new Dimension(
				1920, 1080))));
		
		KeyboardFocusManager manager = KeyboardFocusManager.getCurrentKeyboardFocusManager();
	        Component comp = manager.getFocusOwner();
	        KeyEvent event = new KeyEvent(comp, KeyEvent.KEY_PRESSED, System.currentTimeMillis(), 0, KeyEvent.VK_F2, KeyEvent.CHAR_UNDEFINED);
	    }
	});
	chartMenu.add(logMARRandomMenuItem);

	return chartMenu;
    }

    private JMenu createHelpMenu() {
	JMenu helpMenu = new JMenu(HELP);
	JMenuItem aboutMenuItem = new JMenuItem(ABOUT);
	aboutMenuItem.addActionListener(new ActionListener() {
	    @Override
	    public void actionPerformed(ActionEvent e) {

	    }
	});
	helpMenu.add(aboutMenuItem);

	return helpMenu;
    }
}
